'use strict';

var jqmControllers = angular.module('jqmControllers');

jqmControllers.controller('µQueueListCtrl', function($scope, $http, µQueueDto)
{
	$scope.queues = null;
	$scope.sortvar = 'name';
	$scope.selected = [];

	$scope.newqueue = function()
	{
		$scope.queues.push(new µQueueDto(
		{
			name : 'new queue',
			description : 'enter description',
			defaultQueue : false
		}));
		$scope.gridOptions.selectRow(1);
	};

	$scope.save = function()
	{
		// Save and refresh the table - ID may have been generated by the server.
		µQueueDto.saveAll(
		{}, $scope.queues, $scope.refresh);
	};

	$scope.refresh = function()
	{
		$scope.queues = µQueueDto.query();
	};

	$scope.remove = function()
	{
		var q = null;
		for ( var i = 0; i < $scope.selected.length; i++)
		{
			q = $scope.selected[i];
			if (q.id !== null && q.id !== undefined)
			{
				q.$remove(
				{
					qId : q.id
				});
			}
			$scope.queues.splice($scope.queues.indexOf(q), 1);
		}
	};

	$scope.gridOptions =
	{
		data : 'queues',
		enableCellSelection : true,
		enableRowSelection : true,
		enableCellEditOnFocus : true,
		multiSelect : true,
		showSelectionCheckbox : true,
		selectWithCheckboxOnly : true,
		selectedItems : $scope.selected,

		columnDefs : [
		{
			field : 'name',
			displayName : 'Name'
		},
		{
			field : 'description'
		},
		{
			field : 'defaultQueue',
			displayName : 'is default'
		} ]
	};

	$scope.refresh();
});

/*
 * jqmControllers.controller('NodeDetailCtrl', [ '$scope', '$routeParams', 'µNodeItem', function($scope, $routeParams, µNodeItem) { $scope.nodeId =
 * $routeParams.nodeId; $scope.node = µNodeItem.get( { nodeId : $routeParams.nodeId }); } ]);
 */