'use strict';

var jqmControllers = angular.module('jqmControllers');

jqmControllers.controller('µJndiListCtrl', function($scope, µJndiDto)
{
	$scope.resources = null;
	$scope.selected = [];
	$scope.selected2 = [];
	$scope.second = null;

	$scope.newresource = function()
	{
		$scope.resources.push(new µJndiDto(
		{
			nodeId : $scope.nodes[0].id,
			queueId : $scope.queues[0].id,
			nbThread : 10,
			pollingInterval : 60000,
		}));
		$scope.gridOptions.selectRow(1);
	};

	$scope.neworaclepool = function()
	{
		$scope.resources.push(new µJndiDto(
		{
			name : 'jdbc/oracle',
			auth : 'CONTAINER',
			type : 'javax.sql.DataSource',
			factory : 'org.apache.tomcat.jdbc.pool.DataSourceFactory',
			description : 'Oracle connection pool',
			singleton : true,
			parameters : [
			{
				key : 'testWhileIdle',
				value : "true"
			},
			{
				key : 'testOnBorrow',
				value : "false"
			},
			{
				key : 'testOnReturn',
				value : "true"
			},
			{
				key : 'validationQuery',
				value : "CALL DBMS_APPLICATION_INFO.SET_MODULE('CONNECTION POOL', 'IDLE IN POOL')"
			},
			{
				key : 'validationInterval',
				value : "1000"
			},
			{
				key : 'timeBetweenEvictionRunsMillis',
				value : "60000"
			},
			{
				key : 'maxActive',
				value : 100
			},
			{
				key : 'minIdle',
				value : 2
			},
			{
				key : 'maxWait',
				value : 30000
			},
			{
				key : 'initialSize',
				value : 5
			},
			{
				key : 'removeAbandonedTimeout',
				value : 3600
			},
			{
				key : 'removeAbandoned',
				value : true
			},
			{
				key : 'logAbandoned',
				value : true
			},
			{
				key : 'minEvictableIdleTimeMillis',
				value : 60000
			},
			{
				key : 'jmxEnabled',
				value : true
			},
			{
				key : 'username',
				value : "JQM"
			},
			{
				key : 'password',
				value : "jqm"
			},
			{
				key : 'driverClassName',
				value : "oracle.jdbc.OracleDriver"
			},
			{
				key : 'url',
				value : "jdbc:oracle:thin:@serverdns:1521/TEST"
			},
			{
				key : 'connectionProperties',
				value : "v$session.program=JQM;"
			},
			{
				key : 'initSQL',
				value : "CALL DBMS_APPLICATION_INFO.SET_MODULE('CONNECTION POOL','IDLE IN POOL')"
			},
			{
				key : 'jdbcInterceptors',
				value : "com.enioka.jqm.providers.Interceptor"
			}, ],
		}));
	};

	$scope.save = function()
	{
		// Save and refresh the table - ID may have been generated by the server.
		$scope.bDbBusy = true;
		µQueueMappingDto.saveAll(
		{}, $scope.mappings, $scope.refresh);
	};

	$scope.savealias = function()
	{
		console.debug($scope.selected[0]);
		µJndiDto.save(
		{}, $scope.selected[0], $scope.refresh);
	};

	$scope.refresh = function()
	{
		console.debug('init');
		$scope.resources = µJndiDto.query();
	};

	$scope.removealias = function()
	{
		var q = $scope.selected[0];
		$scope.resources.splice($scope.resources.indexOf(q), 1);
		$scope.selected.splice($scope.resources.indexOf(q), 1);
		// $scope.selected2 = [];

	};

	$scope.removeprms = function()
	{
		var prm = null;
		console.debug('eee');
		for ( var i = 0; i < $scope.selected2.length; i++)
		{
			prm = $scope.selected2[i];
			$scope.selected[0].parameters.splice($scope.selected[0].parameters.indexOf(prm), 1);
		}
	};

	$scope.gridOptions =
	{
		data : 'resources',
		enableCellSelection : false,
		enableRowSelection : true,
		enableCellEditOnFocus : false,
		multiSelect : false,
		showSelectionCheckbox : false,
		selectWithCheckboxOnly : false,
		selectedItems : $scope.selected,
		showGroupPanel : true,

		columnDefs : [
		{
			field : 'name',
			displayName : 'Name',
		},
		{
			field : 'type',
			displayName : 'type',
		},
		{
			field : 'factory',
			displayName : 'factory',
		},
		{
			field : 'description',
			displayName : 'description',
		},
		{
			field : 'singleton',
			displayName : 'singleton',
			width: 50,
		}, ]
	};

	$scope.gridOptions2 =
	{
		data : 'selected[0].parameters',
		enableCellSelection : true,
		enableRowSelection : true,
		enableCellEditOnFocus : true,
		multiSelect : true,
		showSelectionCheckbox : true,
		selectWithCheckboxOnly : true,
		selectedItems : $scope.selected2,

		columnDefs : [
		{
			field : 'key',
			displayName : 'key',
			width : 180,
		},
		{
			field : 'value',
			displayName : 'value',
		}, ]
	};

	$scope.refresh();
});
