[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

cm = org.apache.shiro.authc.credential.HashedCredentialsMatcher
cm.hashAlgorithmName = SHA-512
cm.hashIterations = 100000
cm.storedCredentialsHexEncoded = true

# iniRealm.credentialsMatcher = $cm

cm2 = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
dbRealm = com.enioka.jqm.webui.shiro.JpaRealm
dbRealm.credentialsMatcher = $cm
securityManager.realms = $dbRealm

# Custom basic HTTP filter which does not trigger browser auth prompts inside interactive applications
authcAngular = com.enioka.jqm.webui.shiro.BasicHttpAuthenticationFilter
authcAngular.applicationName = JQM

[users]
m = 0a3ea717cbae427e75346a2d38ad08c2e407659e5b5196cb0688f00b9c739e737003c77808545e7c6e194338912b82e4d9e6e41ad8e2cd1431fab109d6274ca4, admin
n = marsu, admin

[roles]
admin = *
dev = *:read

[urls]
# REST resources are protected according to the verb used
/admin/node/** = authcAngular, rest[node]
/admin/queue/** = authcAngular, rest[queue]
/admin/qmapping/** = authcAngular, rest[qmapping]
/admin/jndi/** = authcAngular, rest[jndi]
/admin/prm/** = authcAngular, rest[prm]
/admin/jd/** = authcAngular, rest[jd]
/admin/user/** = authcAngular, rest[user]
/admin/role/** = authcAngular, rest[role]

# This address allows client to retrieve all their own permission, therefore it has to be in the logged-in only zone too 
/admin/me= authcAngular

# Static is not important
/app.js = anon
/css/* = anon
/constant/*.js = anon
/controller/*.js = anon
/fonts/* = anon
/index.html = anon
/out.html = anon
/libs/*.js = anon
/service/*.js = anon
/template/*.html = anon

# root is equivalent to the index page
/ = anon

# Default is: protected
/** = authcAngular

